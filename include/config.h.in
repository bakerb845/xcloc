/* Copyright: Ben Baker 
 * Author: Ben Baker
 * License: MIT License */
#ifndef XCLOC_CONFIG_H__
#define XCLOC_CONFIG_H__ 1

/* using intel libraries; this means both IPP and MKL */
#cmakedefine XCLOC_USE_INTEL
/* using MPI */
#cmakedefine XCLOC_USE_MPI
/* Profiling */
#cmakedefine XCLOC_PROFILE

#cmakedefine XCLOC_VERSION_MAJOR @XCLOC_VERSION_MAJOR@
#cmakedefine XCLOC_VERSION_MINOR @XCLOC_VERSION_MINOR@
#cmakedefine XCLOC_VERSION_PATCH @XCLOC_VERSION_PATCH@
#cmakedefine XCLOC_VERSION "@XCLOC_VERSION@"

#define DALES_MEM_ALIGNMENT 64
#define DALES_MEM_PADDING   DALES_MEM_ALIGNMENT

#define DALES_PAD_COMPLEX32(ALIGNMENT, n) \
({ \
 size_t paddingElements = ALIGNMENT/sizeof(float complex); \
 size_t padding = n + (paddingElements - n%paddingElements); \
 padding; \
})

#define DALES_PAD_COMPLEX64(ALIGNMENT, n) \
({ \
 size_t paddingElements = ALIGNMENT/sizeof(double complex); \
 size_t padding = n + (paddingElements - n%paddingElements); \
 padding; \
})

#define DALES_PAD_FLOAT64(ALIGNMENT, n) \
({ \
 size_t paddingElements = ALIGNMENT/sizeof(double); \
 size_t padding = n + (paddingElements - n%paddingElements); \
 padding; \
})

#define DALES_PAD_FLOAT32(ALIGNMENT, n) \
({ \
 size_t paddingElements = ALIGNMENT/sizeof(float); \
 size_t padding = n + (paddingElements - n%paddingElements); \
 padding; \
})
  

#endif /* XCLOC_CONFIG_H__ */

