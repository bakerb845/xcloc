CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
PROJECT(xcloc)
ENABLE_LANGUAGE(C)
ENABLE_LANGUAGE(Fortran)
ENABLE_TESTING()

#SET(CMAKE_C_COMPILER ${C_COMPILER}) #"icc")
#SET(CMAKE_CXX_COMPILER ${CXX_COMPILER}) #"icpc")

SET(XCLOC_VERSION_MAJOR 0)
SET(XCLOC_VERSION_MINOR 1)
SET(XCLOC_VERSION_PATCH 1)
SET(XCLOC_VERSION ${XCLOC_VERSION_MAJOR}.${XCLOC_VERSION_MINOR}.${XCLOC_VERSION_PATCH})
MESSAGE("Configuring version: " ${XCLOC_VERSION})
# Add modules for finding requisites
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMakeModules)
SET(CMAKE_Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/modules)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/testing)
SET(CMAKE_TESTING_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/testing)
SET(CMAKE_BINARY_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)


INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${IPP_INCLUDE_DIR}
  ${MKL_INCLUDE_DIR}
  ${SACIO_INCLUDE_DIR}
  ${ISCL_INCLUDE_DIR}
  ${H5_C_INCLUDE_DIR}
  ${MPI_Fortran_INCLUDE_PATH}
  ${MPI_C_INCLUDE_PATH}
  ${XML2_INCLUDE_DIR}
  ${INIPARSER_INCLUDE_DIR}
)
IF (XCLOC_PROFILE)
  INCLUDE_DIRECTORIES(${ADVISOR_INCLUDE_DIR})
ENDIF()

SET(LIB_ALL ${SACIO_LIBRARY} ${ISCL_LIBRARY} ${MKL_LIBRARY} ${IPP_LIBRARY} ${XML2_LIBRARY} ${INIPARSER_LIBRARY} ${H5_LIBRARY} ${MPI_C_LIBRARIES} ${MPI_Fortran_LIBRARIES} -ldl -lm)

ADD_SUBDIRECTORY(include)

#SET(SRC xcloc.c xcfft.c migrate.c h5ioGrid.c h5ioUtils.c xdmf.c)
#SET(SRC ${SRC} xcfftMPI.c migrateMPI.c)
SET(IO_SRC h5ioGrid.c h5ioUtils.c xdmf.c)
SET(SRC ${IO_SRC} firFilter.c fdxc.F90 ipps.F90 constants.F90 memory.F90 spxc.F90
    dsmxc.F90 utils.F90 xcloc.F90)
SET(SRC_MPI ${SRC} fdxcMPI.F90 dsmxcMPI.F90)
IF (XCLOC_USE_MPI)
   SET(SRC ${SRC} ${SRC_MPI})
ENDIF()

# Executables
#ADD_EXECUTABLE(dales dales.c ${SRC})
# Unit tests
#SET(UNIT_TESTS_SRC unit_tests/acousticGreens2D.c)
ADD_LIBRARY(xcloc_shared SHARED ${SRC})
#ADD_LIBRARY(xcloc_static STATIC ${SRCS})
#ADD_EXECUTABLE(interloc interloc.c ${SRC})
ADD_EXECUTABLE(xcf_tests
               testing/test_suite.c
               testing/serialTest.c
               testing/serialLocationTest.c
               testing/acousticGreens2D.c)
#ADD_EXECUTABLE(xcfft unit_tests/check_xcfft.c ${UNIT_TESTS_SRC} ${SRC})
#ADD_EXECUTABLE(xc2d unit_tests/check_2d.c ${UNIT_TESTS_SRC} ${SRC})
#ADD_EXECUTABLE(xcloc unit_tests/xcloc.c ${UNIT_TESTS_SRC} ${SRC})
#ADD_EXECUTABLE(scaling unit_tests/scaling.c ${UNIT_TESTS_SRC} ${SRC})

TARGET_LINK_LIBRARIES(xcloc_shared ${LIB_ALL})
TARGET_LINK_LIBRARIES(xcf_tests xcloc_shared ${LIB_ALL})
#TARGET_LINK_LIBRARIES(interloc ${LIB_ALL})
#TARGET_LINK_LIBRARIES(xcfft ${LIB_ALL})
#TARGET_LINK_LIBRARIES(xc2d ${LIB_ALL})
#TARGET_LINK_LIBRARIES(xcloc ${LIB_ALL})
#TARGET_LINK_LIBRARIES(scaling ${LIB_ALL})

# Set the targets
#SET_TARGET_PROPERTIES(xcloc_shared PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH})
#SET_TARGET_PROPERTIES(xcloc_static PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH})
#SET_TARGET_PROPERTIES(interloc  PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}) 
#SET_TARGET_PROPERTIES(xcfft     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
#SET_TARGET_PROPERTIES(xc2d      PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
#SET_TARGET_PROPERTIES(xcloc     PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
SET_TARGET_PROPERTIES(xcf_tests PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})
#SET_TARGET_PROPERTIES(scaling   PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_TESTING_OUTPUT_DIRECTORY})


#ADD_TEST(NAME xcfft
#         WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/testing
#         COMMAND xcfft)
ADD_TEST(NAME xcf_tests
         WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/testing
         COMMAND xcf_tests)

#INSTALL(TARGETS xcloc_shared LIBRARY DESTINATION ${LIBRARY_OUTPUT_PATH})
#INSTALL(TARGETS xcloc_static LIBRARY DESTINATION ${LIBRARY_OUTPUT_PATH})
INSTALL(TARGETS ${TARGET_NAMES}
        RUNTIME DESTINATION ${CMAKE_BINARY_DIR}
        LIBRARY DESTINATION ${LIBRARY_OUTPUT_PATH}
        ARCHIVE DESTINATION ${LIBRARY_OUTPUT_PATH})
